@using Microsoft.IdentityModel.Tokens
@using Ctodo.Models.ViewModel
@model TodoIndexViewModel

@{
    ViewData["Title"] = "Todos";
}

<div>
    @await Html.PartialAsync("Create", new Tuple<List<Category>, TodoItemViewModel>(@Model.Categories, Model.TodoItemViewModel))
    <div class="mt-5 d-flex flex-column align-items-center">
        @{
            if (!Model.Todos.IsNullOrEmpty())
            {
                foreach (var todo in Model.Todos)
                {
                    <div class="my-3 mx-1 col" style="max-width: 600px; width: 100%">
                        <div class="card d-flex flex-row">
                            <div class="card-body">
                                <h5 class="card-title">@todo.Title</h5>
                                <p class="card-text">Priority: @todo.Priority</p>
                                @if (todo.DueDate.HasValue)
                                {
                                    <p class="card-text">Due Date: @todo.DueDate.Value.ToShortDateString()</p>
                                }
                                <div class="form-check">
                                    <form id="formToggleTodoCompleted-@todo.TodoId" asp-action="ToggleTodoCompleted" asp-controller="Todo" method="post">
                                        <input class="form-check-input" type="checkbox" id="todo-@todo.TodoId" name="IsCompleted" value="@((!todo.IsCompleted).ToString().ToLower())" checked="@(todo.IsCompleted)" onclick="handleToggleTodoCompleted('@todo.TodoId')"/>
                                        <input type="hidden" name="TodoId" value="@todo.TodoId"/>
                                    </form>
                                    <label class="form-check-label @(todo.IsCompleted ? "text-success" : "text-warning")" for="todo-@todo.TodoId">
                                        Completed
                                    </label>
                                </div>
                                <div class="mt-2">
                                    @{
                                        if (!todo.Categories.IsNullOrEmpty())
                                        {
                                            foreach (var category in todo.Categories.ToList())
                                            {
                                                <p class="lead m-0 text-primary">Category: @category.Name</p>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                            <div class="p-2 d-flex justify-content-end">
                                <div>
                                    <form asp-controller="Todo" asp-action="DeleteTodo" method="post">
                                        <button class="btn btn-outline-danger" type="submit" name="TodoId" value="@todo.TodoId">Delete</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <hr class="mt-5"/>
            }
            else
            {
                <h3>No task has been created yet!</h3>
            }
        }
    </div>
</div>